participant Auctioneer
participant AuctionHouse
participant Lot
participant MessageService
participant Buyer
participant Seller
participant BankingService

activate Auctioneer

Auctioneer -> AuctionHouse: closeAuction(Lot)
activate AuctionHouse
AuctionHouse -> Lot: close()
activate Lot
Lot --> AuctionHouse: Status
deactivate Lot

alt Lot already closed (Status failed)
AuctionHouse --> Auctioneer: Status
deactivate AuctionHouse
deactivate Auctioneer
end

alt Reserve price not met
activate Auctioneer
activate AuctionHouse

AuctionHouse -> AuctionHouse: getAddress(Seller)
AuctionHouse -> MessageService: message(sellerAddress : MessagingAddress, LotSold, Lot)
activate MessageService
MessageService -> Seller: receiveMessage(LotSold, Lot)
activate Seller
Seller --> MessageService: Status
deactivate Seller
MessageService --> AuctionHouse: Status
deactivate MessageService

loop for each buyer
AuctionHouse -> AuctionHouse: getAddress(Buyer)
AuctionHouse -> MessageService: message(buyerAddress : MessagingAddress, LotSold, Lot)
activate MessageService
MessageService -> Buyer: receiveMessage(LotSold, Lot)
activate Buyer
Buyer --> MessageService: Status
deactivate Buyer
MessageService --> AuctionHouse: Status
deactivate MessageService
end 
AuctionHouse --> Auctioneer: Status
deactivate AuctionHouse
deactivate Auctioneer
end 

alt Reserve price met
activate Auctioneer
activate AuctionHouse

AuctionHouse -> AuctionHouse: getAddress(Seller)
AuctionHouse -> MessageService: message(sellerAddress : MessagingAddress, LotSold, Lot)
activate MessageService
MessageService -> Seller: receiveMessage(LotSold, Lot)
activate Seller
Seller --> MessageService: Status
deactivate Seller
MessageService --> AuctionHouse: Status
deactivate MessageService

loop for each buyer
AuctionHouse -> AuctionHouse: getAddress(Buyer)
AuctionHouse -> MessageService: message(buyerAddress : MessagingAddress, LotSold, Lot)
activate MessageService
MessageService -> Buyer: receiveMessage(LotSold, Lot)
activate Buyer
Buyer --> MessageService: Status
deactivate Buyer
MessageService --> AuctionHouse: Status
deactivate MessageService
end 

AuctionHouse -> BankingService: transfer(buyerAccount, buyerAuthorization, auctionHouseAccount, finalPrice + buyersPremium)
activate BankingService
BankingService --> AuctionHouse: Status
deactivate BankingService

AuctionHouse -> BankingService: transfer(auctionHouseAccount, auctionHouseAuthorization, sellerAccount, finalPrice - sellersCommission)
activate BankingService
BankingService --> AuctionHouse: Status
deactivate BankingService

AuctionHouse --> Auctioneer: Status
deactivate AuctionHouse
deactivate Auctioneer
end 
